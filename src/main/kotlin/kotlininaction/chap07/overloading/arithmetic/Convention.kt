package kotlininaction.chap07.overloading.arithmetic

/*
코틀린에서는 convention, 관례를 이용한 언어 기능이 있다
자바의 for 루프에 Iterable 을 구현한 객체를 사용하는 것, try-with-resource 에 AutoCloseable 을 구현한 객체를 사용하는 것과
유사하지만 다르게 메서드 이름과 연결되는 연산자들이 있다
예를 들어 객체에서 plus 라는 이름의 메서드가 있으면 + 연산자를 이용할 수 있다

왜 인터페이스 구현이 아닌 메서드 이름 관례를 사용하는가
코틀린에서 자바 코드를 인터페이스 구현하도록 변경하지 않고도 추가 기능을 넣기 위해 이러한 방식을 사용한다
구현 클래스를 이용하는 경우엔 확장 함수, 상속 클래스를 이용하는 경우엔 메서드 추가로 기능을 추가 지원할 수 있다
 */